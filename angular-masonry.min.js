"use strict";angular.module("ngMasonry",[]).controller("masonryController",function(){function n(){return!!t.config&&!!t.config.masonryContainer}function r(){var n={itemSelector:t.config.masonryItem},r=t.config.masonryOptions?angular.extend(n,t.config.masonryOptions):n;t.container=new Masonry(t.config.masonryContainer,r),"undefined"!=typeof ImagesLoaded&&new ImagesLoaded(t.config.masonryContainer,function(){t.reLayout()})}function o(){t.container.layout()}var t=this;t.config={},t.container=void 0,t.ready=n,t.initialize=r,t.reLayout=o}).directive("masonry",function(){function n(n,r){var o=!1,t=angular.element(document.querySelectorAll("["+r.$attr.masonry+"] [data-masonry-item], ["+r.$attr.masonry+"] [masonry-item]"));return angular.forEach(t,function(n){n=angular.element(n),(void 0!==n.attr("ng-repeat")||void 0!==n.attr("data-ng-repeat"))&&(o=!0,n.attr("data-masonry-after-render",""))}),{pre:function(n,r,o,t){t.config.masonryContainer="["+o.$attr.masonry+"]",t.config.masonryOptions=JSON.parse(o.masonryOptions||"{}")},post:function(n,r,t,e){o||e.initialize()}}}var r={restrict:"A",controller:"masonryController",compile:n};return r}).directive("masonryItem",function(){function n(){return{pre:function(n,r,o,t){void 0===t.config.masonryItem&&(t.config.masonryItem="["+o.$attr.masonryItem+"]")}}}var r={restrict:"A",require:"^masonry",priority:1,compile:n};return r}).directive("masonryAfterRender",["$rootScope","$timeout",function(n,r){"ngInject";function o(o,t,e,a){if(o.$last){var i=null;i=r(function(){a.initialize(),r.cancel(i),n.$emit("masonryLoaded")})}}var t={restrict:"A",require:"^masonry",priority:0,link:o};return t}]);